%!PS-Adobe-3.0 EPSF-3.0
%%Title: block_revb.eps
%%Creator: XCircuit v3.7 rev57
%%CreationDate: Sat Aug  9 16:44:14 2014
%%Pages: 1
%%BoundingBox: 68 68 595 399
%%DocumentNeededResources: font Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::circle {
% trivial
begingate
1 1.000 16 0 6 0.000 360.000 xcarc
1 1.000 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.000 0 0 pinlabel
endgate
} def

/euro::com-alt {
begingate
1 1.000 -24 8 24 8 0 -24 -24 8 4 polygon
1 1.000 0 8 0 24 2 polygon
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: block_revb 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0560 inchscale
2.6000 setlinewidth 405 533 translate

-1.000 0 -32 -32 generic::circle
1 1.000 -48 -32 16 45.000 315.000 xcarc
0 1.000 272 48 272 -16 368 -16 368 48 4 polygon
1 1.000 296 16 288 32 352 32 288 0 spline
-1.000 0 -32 96 generic::circle
1 1.000 -48 96 16 45.000 315.000 xcarc
1.000 0 944 -80 generic::circle
1 1.000 960 -80 16 225.000 495.000 xcarc
1.000 0 -48 48 euro::com-alt
1 1.000 -48 80 -48 64 2 polygon
1.000 0 -48 -80 euro::com-alt
1 1.000 -48 -48 -48 -64 2 polygon
1.000 0 16 48 generic::circle
1.000 0 16 16 generic::circle
-1.000 0 96 32 generic::circle
1 1.000 -32 96 0 96 0 48 16 48 4 polygon
1 1.000 -32 -32 0 -32 0 16 16 16 4 polygon
1 1.000 112 -64 16 0.000 360.000 xcarc
1 1.000 104 -64 120 -64 2 polygon
1 1.000 112 -56 112 -72 2 polygon
1.000 0 176 0 generic::circle
1.000 0 176 32 generic::circle
-1.000 0 256 16 generic::circle
1 1.000 96 32 176 32 2 polygon
1 1.000 176 0 160 0 160 -64 128 -64 4 polygon
1 1.000 112 32 112 -48 2 polygon
0 1.000 400 48 400 -16 496 -16 496 48 4 polygon
{ns} (ADC) {/Times-Roman cf} 3 21 0 0.700 448 16 label
(Dual synthesizer) {/Times-Roman cf} 2 21 0 0.700 688 48 label
(ref) {ss} {/Times-Roman cf} (f) {ns} {/Symbol cf} 6 17 0 0.700 784 -16 label
(var) {ss} {/Times-Roman cf} (f) {/Symbol cf} 5 17 0 0.700 592 -16 label
0 1.000 544 64 544 -32 832 -32 832 64 4 polygon
1 1.000 592 -32 592 -112 112 -112 112 -80 4 polygon
1 1.000 400 16 384 16 2 polygon
1 1.000 272 16 256 16 2 polygon
(ln\(x\)) {/Times-Roman cf} 2 16 0 0.700 304 0 label
1 1.000 848 -48 848 -112 912 -80 848 -48 4 polygon
1 1.000 784 -32 784 -80 848 -80 3 polygon
1 1.000 944 -80 912 -80 2 polygon
1.000 0 960 -128 euro::com-alt
1 1.000 960 -112 960 -96 2 polygon
1 1.000 72 32 40 48 2 polygon
1 1.000 232 16 200 32 2 polygon
1.000 0 112 32 generic::dot
5 1.000 -96 128 256 128 256 -32 64 -32 64 -160 -96 -160 -96 128 7 polygon
5 1.000 64 -160 640 -160 640 16 512 16 512 -32 256 -32 6 polygon
1 1.000 384 16 368 16 2 polygon
5 1.000 256 128 512 128 512 16 3 polygon
5 1.000 512 128 992 128 992 -160 640 -160 640 -160 5 polygon
(multiplexing) {CR} (Signal input,) {/Times-Roman cf} 4 21 0 0.700 -16 -192 
label
(Detection) {/Times-Roman cf} 2 21 0 0.700 352 144 label
(Driver) {/Times-Roman cf} 2 21 0 0.700 848 -176 label
(Phase measurement) {/Times-Roman cf} 2 21 0 0.700 352 -176 label
0 1.000 -32 320 -32 192 960 192 960 320 4 polygon
(Microcontroller) {/Times-Roman cf} 2 21 0 0.700 448 256 label
1 1.000 64 48 64 192 2 polygon
1 1.000 224 32 224 192 2 polygon
1 1.000 448 48 448 192 2 polygon
1 1.000 592 64 592 192 2 polygon
1 1.000 880 -64 880 192 2 polygon
(High) {CR} (Sense) {/Times-Roman cf} 4 21 0 0.700 -144 96 label
(Low) {CR} (Sense) {/Times-Roman cf} 4 21 0 0.700 -144 -32 label
(Drive) {/Times-Roman cf} 2 21 0 0.700 1040 -80 label
(USB) {/Times-Roman cf} 2 21 0 0.700 32 384 label
0 1.000 -32 416 -32 352 96 352 96 416 4 polygon
(supplies) {CR} (Power) {/Times-Roman cf} 4 21 0 0.700 192 384 label
0 1.000 128 416 128 352 256 352 256 416 4 polygon
1 1.000 32 352 32 320 2 polygon
1 1.000 96 384 128 384 2 polygon
0 1.000 960 416 960 352 512 352 512 416 4 polygon
(Optional: LCD panel/buttons/touch?) {/Times-Roman cf} 2 21 0 0.700 736 384 
label
1 1.000 736 352 736 320 2 polygon
0 1.000 1088 464 -224 464 -224 -352 1088 -352 4 polygon
(USB VNA Block Diagram) {/Times-Roman 1.500 cf} 2 16 0 0.700 592 -272 label
(Chris Pavlina) {/Times-Roman cf} 2 16 0 0.700 592 -304 label
(Rev. A.2) {/Times-Roman cf} 2 16 0 0.700 592 -336 label
(Aug. 9, 2014) {/Times-Roman cf} 2 19 0 0.700 1072 -336 label
1 1.000 1088 -224 576 -224 576 -352 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
